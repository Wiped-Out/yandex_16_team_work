"""email_confirmation_field

Revision ID: 1d90196abd4e
Revises: 7cf43e2f8345
Create Date: 2022-09-22 14:36:12.029500

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1d90196abd4e'
down_revision = '7cf43e2f8345'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('logs_2022_07')
    op.drop_table('logs_2022_08')
    op.create_unique_constraint(None, 'oauth', ['id'])
    op.create_unique_constraint(None, 'refresh_tokens', ['id'])
    op.create_unique_constraint(None, 'roles', ['id'])
    op.add_column('users', sa.Column('email_is_confirmed', sa.Boolean(), nullable=False))
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'email_is_confirmed')
    op.drop_constraint(None, 'roles', type_='unique')
    op.drop_constraint(None, 'refresh_tokens', type_='unique')
    op.drop_constraint(None, 'oauth', type_='unique')
    op.create_table('logs_2022_08',
    sa.Column('device', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('when', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('action', postgresql.ENUM('login', 'logout', 'logout_everywhere', 'other', name='actions_enum'), autoincrement=False, nullable=False),
    sa.Column('method', postgresql.ENUM('post', 'get', 'put', 'delete', 'update', 'patch', name='method_enum'), autoincrement=False, nullable=False),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='logs_user_id_fkey'),
    sa.PrimaryKeyConstraint('when', 'id', name='logs_2022_08_pkey'),
    sa.UniqueConstraint('id', 'when', name='logs_2022_08_id_when_key')
    )
    op.create_table('logs_2022_07',
    sa.Column('device', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('when', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('action', postgresql.ENUM('login', 'logout', 'logout_everywhere', 'other', name='actions_enum'), autoincrement=False, nullable=False),
    sa.Column('method', postgresql.ENUM('post', 'get', 'put', 'delete', 'update', 'patch', name='method_enum'), autoincrement=False, nullable=False),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='logs_user_id_fkey'),
    sa.PrimaryKeyConstraint('when', 'id', name='logs_2022_07_pkey'),
    sa.UniqueConstraint('id', 'when', name='logs_2022_07_id_when_key')
    )
    # ### end Alembic commands ###
